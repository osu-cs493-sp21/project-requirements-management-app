{
	"info": {
		"_postman_id": "328a0a40-4173-4d2b-a933-bc216a8f389d",
		"name": "Businesses API Tests",
		"description": "A simple API for a Yelp-like application.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "businesses",
			"item": [
				{
					"name": "{businessid}",
					"item": [
						{
							"name": "Fetch data for a specific business.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/businesses/:businessid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"businesses",
										":businessid"
									],
									"variable": [
										{
											"key": "businessid",
											"value": "2",
											"description": "(Required) Unique ID of a business."
										}
									]
								},
								"description": "Returns complete data for a the business specified by `businessid`.\n"
							},
							"response": []
						},
						{
							"name": "Update data for a specific business.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ownerid\": 7,\n\t\"name\": \"Allan's Coffee & Tea\",\n\t\"address\": \"2541 NW Monroe Ave.\",\n\t\"city\": \"Corvallis\",\n\t\"state\": \"OR\",\n\t\"zip\": \"97330\",\n\t\"phone\": \"541-757-0828\",\n\t\"category\": \"Restaurant\",\n\t\"subcategory\": \"Coffee Shop\",\n\t\"website\": \"https://www.allanscoffee.com/\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/businesses/:businessid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"businesses",
										":businessid"
									],
									"variable": [
										{
											"key": "businessid",
											"value": "17",
											"description": "(Required) Unique ID of a business."
										}
									]
								},
								"description": "Replaces the data for the business specified by `businessid`.\n"
							},
							"response": []
						},
						{
							"name": "Remove a specific business from the database.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/businesses/:businessid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"businesses",
										":businessid"
									],
									"variable": [
										{
											"key": "businessid",
											"value": "7",
											"description": "(Required) Unique ID of a business."
										}
									]
								},
								"description": "Completely removes the data for the business specified by `businessid`.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Fetch a list of businesses",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/businesses?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Specifies a specific page of businesses to request.\n"
								}
							]
						},
						"description": "Returns a paginated list of businesses.\n"
					},
					"response": []
				},
				{
					"name": "Add a new business",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ownerid\": 21,\n    \"name\": \"American Dream Pizza\",\n    \"address\": \"2525 NW Monroe Ave.\",\n    \"city\": \"Corvallis\",\n    \"state\": \"OR\",\n    \"zip\": \"97330\",\n    \"phone\": \"541-757-1713\",\n    \"category\": \"Restaurant\",\n    \"subcategory\": \"Pizza\",\n    \"website\": \"http://adpizza.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/businesses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses"
							]
						},
						"description": "Creates a new business with specified data and adds it to the application's database.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "photos",
			"item": [
				{
					"name": "{photo ID}",
					"item": [
						{
							"name": "Fetch data for a specific photo.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/photos/:photoID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photos",
										":photoID"
									],
									"variable": [
										{
											"key": "photoID",
											"value": "1",
											"description": "(Required) Unique ID of a photo."
										}
									]
								},
								"description": "Returns complete data for a the photo specified by `photoID`.\n"
							},
							"response": []
						},
						{
							"name": "Update data for a specific photo.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userid\": 25,\n    \"businessid\": 2,\n    \"caption\": \"Look at this sweet bag of mixed fasteners I just bought!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/photos/:photoID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photos",
										":photoID"
									],
									"variable": [
										{
											"key": "photoID",
											"value": "2",
											"description": "(Required) Unique ID of a photo."
										}
									]
								},
								"description": "Replaces the data for the photo specified by `photo`.\n"
							},
							"response": []
						},
						{
							"name": "Remove a specific photo from the database.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/photos/:photoID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photos",
										":photoID"
									],
									"variable": [
										{
											"key": "photoID",
											"value": "7",
											"description": "(Required) Unique ID of a photo."
										}
									]
								},
								"description": "Completely removes the data for the photo specified by `photoID`.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Add a new photo",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userid\": 21,\n    \"businessid\": 10,\n    \"caption\": \"So many books!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/photos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"photos"
							]
						},
						"description": "Creates a new photo with specified data and adds it to the application's database.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "{review ID}",
					"item": [
						{
							"name": "Fetch data for a specific review.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewID"
									],
									"variable": [
										{
											"key": "reviewID",
											"value": "1",
											"description": "(Required) Unique ID of a review."
										}
									]
								},
								"description": "Returns complete data for a the review specified by `reviewID`.\n"
							},
							"response": []
						},
						{
							"name": "Update data for a specific review.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userid\": 25,\n    \"businessid\": 2,\n    \"dollars\": 1,\n    \"stars\": 5,\n    \"review\": \"How many fasteners can one room hold?\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewID"
									],
									"variable": [
										{
											"key": "reviewID",
											"value": "2",
											"description": "(Required) Unique ID of a review."
										}
									]
								},
								"description": "Replaces the data for the review specified by `review`.\n"
							},
							"response": []
						},
						{
							"name": "Remove a specific review from the database.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reviews/:reviewID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reviews",
										":reviewID"
									],
									"variable": [
										{
											"key": "reviewID",
											"value": "7",
											"description": "(Required) Unique ID of a review."
										}
									]
								},
								"description": "Completely removes the data for the review specified by `reviewID`.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Add a new review",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userid\": 21,\n    \"businessid\": 10,\n    \"dollars\": 1,\n    \"stars\": 5,\n    \"review\": \"My favorite bookstore.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews"
							]
						},
						"description": "Creates a new review with specified data and adds it to the application's database.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Fetch a user's owned businesses.",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userid/businesses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userid",
								"businesses"
							],
							"variable": [
								{
									"key": "userid",
									"value": "7",
									"description": "(Required) Unique ID of a user."
								}
							]
						},
						"description": "Returns a list of all of the businesses owned by the user specified by `userid`.\n"
					},
					"response": []
				},
				{
					"name": "Fetch a user's photos.",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userid/photos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userid",
								"photos"
							],
							"variable": [
								{
									"key": "userid",
									"value": "21",
									"description": "(Required) Unique ID of a user."
								}
							]
						},
						"description": "Returns a list of all of the photos posted by the user specified by `userid`.\n"
					},
					"response": []
				},
				{
					"name": "Fetch a user's reviews.",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userid/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userid",
								"reviews"
							],
							"variable": [
								{
									"key": "userid",
									"value": "21",
									"description": "(Required) Unique ID of a user."
								}
							]
						},
						"description": "Returns a list of all of the reviews written by the user specified by `userid`.\n"
					},
					"response": []
				},
				{
					"name": "Login",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin0@example.com\",\n    \"password\": \"asdfg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Luke Skywalker\",\n  \"email\": \"TheLastJewdi@gmail.com\",\n  \"password\": \"hunter2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}